Задание #1. На локальном репозитории сделать ветки для:
- Postman
- Jmeter
- CheckLists
- Bag Reports
- SQL
- Charles
- Mobile testing
1. 
  1.1 Создал на Githab репозитроий в котором будут мои ветки.
  1.2 Клонируем его на лакольный репозиторий git clone и ссылка репозитория
  1.3 Заходим в склонируемый репозиторий cd "название репозитория"
  1.4 Создаем ветки Postman, Jmeter, CheckLists, Bag_reports, SQL, Charles, Mobile_Testing:
      git branch Postman
      git branch Jmeter
      git branch CheckLists
      git branch Bag_reports
      git branch SQL
      git branch Charles
      git branch Mobile_testing
Задание #2. Запушить все ветки на внешний репозиторий.
2.
      git push -u origin Postman
      git push -u origin Jmeter
      git push -u origin CheckLists
      git push -u origin Bag_reports
      git push -u origin SQL
      git push -u origin Chsrles
      git push -u origin Mobile_testing
Задание #3. В ветке Bag Reports сделать текстовый документ со структурой баг репорта
      git checkout Bag_Reports
      touch bug_report.txt
      vim bug_report.txt
        insert
          1. Заголовок
          2. Шаги воспроизведения
          3. Ожидаемый результат
          4. Акктуальный результат
          5. Приоритет
          6. Серьёзность
        esc :wq
Задание #4. Запушить структуру багрепорта на внешний репозиторий
      git add .
      git commit -m "create bug_report.txt and add inf"
      git push
Задание №5. Вмержить ветку Bag_reports в Main
      git checkout main
      git merge Bag_reports
Задание №6. Запушить main на внешний репозиторий.      
      git add .
      git commit -m "merge branch Bag_reports in main"
      git push
7. В ветке CheckLists набросать структуру чек листа.
      git checkout CheckLists
      touch check_list.txt
      vim check_list.txt
        insert
                2.4 Пользователь с введенным логином и паролем существует в системе, но заблокирован модерацией (страница заморожена).
                2.5 Валидация полей ввода.
        3. Протестируйте валидацию всех обязательных полей:
                3.1 Максимальная и минимальная длина.
                3.2 Диапазон допустимых символов, спецсимволы.
                3.3 Обязательность к заполнению.
                3.4 Убедитесь, что астериск (знак звездочки) отображается у всех обязательных полей.
                3.5 Убедитесь, что система не отображает окно ошибки при незаполненных необязательных полях
        4. Поиск:
                4.1 Результаты существуют/не существуют.
                4.2 Корректное сообщение о пустом результате.
                4.3 Пустой поисковой запрос.
                4.4 Поиск по эмодзи.
        5. Поля:
                5.1 Числовые поля: они не должны принимать буквы, в этом случае должно отображаться соответствующее сообщение об ошибке.
                5.1 Дробные значения, например, как система валидирует 1.1 и 1,1.
                5.2 Отрицательные значения в числовых полях, если они разрешены.
                5.3 Деление на ноль корректно обрабатывается.
                5.4 Протестируйте максимальную длину каждого поля, чтобы убедиться, что данные не обрезаются или скрываются под многоточие.
                5.5 Протестируйте все поля ввода на спецсимволы.
                5.6Проверить что текст не выезжает за границы поля.

        6. Всплывающие сообщения:
                6.1 Протестируйте всплывающие сообщения («Это поле ограничено N знаками»).
                6.2 Подтверждающие сообщения отображается для операций обновления и удаления.
                6.3 Сообщения об ошибках ввода.
        7.Фильтры:
                7.1 Протестируйте функциональность сортировки (по возрастанию, по убыванию, по новизне).
                7.2 Задать фильтры с выдачей.
                7.3 Задать фильтры, по которым нет выдачи.
                7.4 Фильтры по категориям/подкатегориям.
                7.5 Фильтры с радиусом поиска.
                7.6 Данные в выпадающих списках.
        8. Протестируйте функциональность доступных кнопок.
        9. Наличие favicon.
        10. Проверка обработки различных ошибок (страница не найдена, тайм-аут, ошибка сервера и т.д.).
        11. Протестируйте, что все загруженные документы правильно открываются.
        12. Пользователь может скачать/прикрепить/загрузить файлы/медиа (картинки, видео и т.д.).
            А также удалить эти файлы из вложений. Убедитесь, что файлы уходят на сервер только после нажатия соответствующей кнопки
        13. Протестируйте почтовую функциональность системы.
        14. Кеш, cookie и сессии:
                14.1 Пользователь очистил кэш браузера
                14.2 Посмотрите, что будет, если пользователь удалит куки, находясь на сайте.
                14.3 Посмотрите, что будет, если пользователь удалит куки после посещения сайта.
        15. DevTools:
                15.1 Ошибки в Console.
                15.2 Все стили загружаются.
                15.3 Картинки загружаются.
             insert :wq
8. Запушить структуру на внешний репозиторий: 
    git add.
    git commit -m "create check_list.txt"
    git push
9.  9. На внешнем репозитории сделать Pull Request ветки CheckLists в main:
    После пуша check_list.txt на локальный репозиторий ветки CheckLists появляется зеленая кнопка Compare&pull requset жмём на нее и всё)
10. Синхронизировать Внешнюю и Локальную ветки Main
    git checkout main
    git fetch
    git pull


      
      
      
